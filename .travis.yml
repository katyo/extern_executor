language: rust
rust:
- stable
- beta
- nightly
os:
- linux
- osx
- windows
cache:
  cargo: true
  directories:
  - $HOME/AppData/Local/Temp/chocolatey
  - /C/tools/msys64
before_install:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
        choco uninstall -y mingw
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
        export msys2+=" -msys2 -c "\"\$@"\" --"
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain mingw-w64-x86_64-libuv
        ## Install more MSYS2 packages from https://packages.msys2.org/base here
        taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
        export PATH=/C/tools/msys64/mingw64/bin:$PATH
        export MAKE=mingw32-make  # so that Autotools can find it
        ;;
      *)
        export MAKE=make
        ;;
    esac

before_cache:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        # https://unix.stackexchange.com/a/137322/107554
        $msys2 pacman --sync --clean --noconfirm
        ;;
    esac
addons:
  apt:
    packages:
    - libuv1-dev
  homebrew:
    packages:
    - libuv
    update: true
script:
- (cd extern_executor && cargo test --features cbindgen)
- (cd extern_executor && cargo test --no-default-features --features no_std)
- (cd example_bin && $MAKE)
- if [ "$TRAVIS_OS_NAME" != "windows" ]; then (cd example_uv && $MAKE); fi
jobs:
  allow_failures:
  - rust: nightly
  include:
  - stage: publish
    script:
    - (cd extern_executor && cargo publish || true)
    if: (type = push) && (tag =~ /^\d+\.\d+\.\d+/)
